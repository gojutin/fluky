;(function(global) {
	global._ = undefined;
	let Fluky = (...args) => {
		var newArr = [];
		var finalArr = [];
		var mappedArgs = args.map((item)=>{ 
			item = Number(item);
			newArr.push(item);
		});
		var testArgs = newArr.map((item)=>{ 
			if (typeof item !== 'number' || item === 0 || isNaN(item)){
				item = undefined;
			}
				finalArr.push(item);
		});
		if (finalArr[0] >= finalArr[1]) {
			throw new Error("The lowest number must be less than the highest number.");
		}
		if (finalArr[2] > 20) {
			finalArr[2] = 20;
			console.warn("Your fixed parameter has been changed to the maximum number of 20.");
		}
		return new FlukyInit(...finalArr);
	}

	class FlukyInit {
		constructor(lowest = 1, highest = 100, fixed = 0) {
			this.lowest = lowest;
			this.highest = highest;
			this.fixed = fixed;
			this.value = '';
			this.attempts = 0;
		}
		new() {
			var randomNumber = Math.random() * this.highest;
			this.attempts += 1;
			this.checker(randomNumber);
			return this.value;
		}
		checker(num) {
			if (num < this.lowest) {
				this.new();
			} else {
				console.log(`Attempts: ${this.attempts}`);
				let result = Number(num.toFixed(this.fixed));
				this.value = result;
			}
		}		
	}
	
	global.Fluky = global.f$ = Fluky;

}(window));

